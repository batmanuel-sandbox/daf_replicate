daf_replicate -- a package for tranfering data across sites.

Currently, this package only supports manage_visits.sh for transfering
ImSim data to NCSA using the 3rd party transfer tool, FDT
(http://monalisa.cern.ch/FDT/). 

GETTING THIS PACKAGE:

A few binary distributions are available from
http://dev.lsstcorp.org/trac/wiki/ImSimDataTransfer: 

  o  daf_replicate-linux-i686.tar.gz -- for 32-bit Linux
  o  daf_replicate-linux-x86_64.tar.gz -- for 64-bit Linux
  o  daf_replicate-noarch.tar.gz -- generic (must obtain JRE separately)

All of these include the FDT tool (as a jar file).  The first two
include a Java Virtual Machine (JVM).  

One can get the lastest source code from
svn://dev.lsstcorp.org/DMS/daf/replicate/trunk.  A source distribution
from SVN does include FDT nor the JVM.  

REQUIREMENTS

 o  FDT -- Fast Data Transfer tool (http://monalisa.cern.ch/FDT/)

    If your distribution did not include a lib subdirectory, then you
    need to download the FDT jar file from the FDT website

  o Java Runtime Engine (JRE; http://www.java.com)

    If your distribution did not include a jre subdirectory, then you
    need to download the JRE 1.6 package from the Java website.  

INSTALLATION

Installation and setup (for the manage_visits.sh tool) is done as
follows: 

  1.  Unpack the distribution where you want it installed and change
      into its root directory.  

  2.  Edit the configuration file, manage_visits.cfg, in the conf
      subdirectory.  Usually, only editing the parameter values in the
      first section should be necessary.  Save your changes.

  3.  Create your transfer directories as needed by running the
      bin/setup_manage_visits.sh: 

        % bash bin/setup_manage_visits.sh -f conf/manage_visits.cfg

  4.  Create and deploy a password-less ssh key onto the data 
      destination host (i.e. lsst2.ncsa.uiuc.edu).  

      a. On your local host, make sure you have a $HOME/.ssh
         directory for the user that will be pushing data to NCSA.
         This is most reliably created by using ssh as that user to 
         login into another machine.  

      b. Create a custom, password-less ssh key-pair using ssh-keygen:

           % ssh-keygen -t dsa -f $HOME/.ssh/lssttrx

         When this command asks for a pass-phrase, simply hit return
         without entering one (twice).  This will create files called 
         lssttrx (the private key) and lssttrx.pub (the public key) 
         in the $HOME/.ssh directory.  You may use whatever base name 
         you wish for the key-pair; just be sure to provide that name
         in the configuration file (step 5).  

      c. Send the public key ($HOME/.ssh/lssttrx.pub) for deployment
         on the destination host.  (For lsst2.ncsa.uiuc.edu, send the
         public key to lsst-admin at ncsa.uiuc.edu, requesting
         deployment.)   The contents of the  public key file should be
         appended to the $HOME/.ssh/authorized_keys file on the
         destination host.  

  5.  Check your setup by running the test script
      bin/test_manage_visits.sh: 

        % bash bin/setup_manage_visits.sh -f conf/manage_visits.cfg

      This will make sure all the necessary directories exist, ssh
      keys are properly in place, java is properly configured, and FDT
      executes. 

You should now be ready to run the tool.

RUNNING

To transfer some available ImSim data from you local machine to NCSA,
run the bin/manage_visits.sh:

  % bash bin/manage_visits.sh  -f conf/manage_visits.cfg

This script will only transfer a limited number of available visits
before it exits (2 by default); this limit can be changed in the
configuration file by editing the MAX_VCNT parameter.  

It is intended that this script can be executed on regular intervals
from a cron job.  A application file lock prevents multiple
simultaneous executions.  


